[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "green-needle"
version = "1.0.0"
description = "High-quality local audio transcription using OpenAI Whisper"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Green Needle Team", email = "support@greenneedle.io"},
]
keywords = ["whisper", "transcription", "audio", "speech-to-text", "openai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "openai-whisper>=20230918",
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "transformers>=4.30.0",
    "soundfile>=0.12.1",
    "librosa>=0.10.0",
    "pydub>=0.25.1",
    "sounddevice>=0.4.6",
    "webrtcvad>=2.0.10",
    "pandas>=2.0.0",
    "tqdm>=4.65.0",
    "click>=8.1.3",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "rich>=13.3.5",
    "requests>=2.31.0",
    "psutil>=5.9.5",
    "humanize>=4.6.0",
    "ffmpeg-python>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.3.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "pylint>=2.17.4",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.2.2",
    "sphinx-autodoc-typehints>=1.23.0",
    "pre-commit>=3.3.2",
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
    "notebook>=6.5.4",
    "build>=0.10.0",
    "twine>=4.0.2",
    "wheel>=0.40.0",
]
gpu = [
    "torch>=2.0.0",
    "torchvision",
    "torchaudio",
]

[project.urls]
Homepage = "https://github.com/yourusername/green-needle"
Documentation = "https://green-needle.readthedocs.io"
Repository = "https://github.com/yourusername/green-needle"
Issues = "https://github.com/yourusername/green-needle/issues"

[project.scripts]
green-needle = "green_needle.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
green_needle = ["config/*.yaml", "templates/*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pylint.messages_control]
disable = "C0330, C0326"

[tool.pylint.format]
max-line-length = "88"